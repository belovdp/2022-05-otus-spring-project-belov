version: "3"

services:
  keycloak-db:
    image: postgres:13.2
    container_name: local-keycloak-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak

  keycloak:
    depends_on:
      - keycloak-db
    image: jboss/keycloak:16.1.1
    container_name: local-keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: keycloak-db
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: keycloak
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: password
      KEYCLOAK_IMPORT: "/tmp/export.json -Dkeycloak.profile.feature.upload_scripts=enabled"
    volumes:
      - "./keycloak/export.json:/tmp/export.json"
    restart: unless-stopped
    ports:
      - "127.0.0.1:8080:8080"

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    image: belovdp/user-service
    container_name: user-service
    restart: always
    privileged: true
    depends_on:
      - keycloak
      - eureka-service
    environment:
      KC_URL: http://keycloak:8080/auth
      KC_REALM: shop
      KC_CLIENT_ID: shop-app
      KC_SECRET: WBdsIy3SVkffSULcv7TuvCLYd6KsQJOI
      EUREKA_SERVICE_SERVER_PORT: 8084
      EUREKA_SERVICE_SERVER_HOSTNAME: eureka-service
    ports:
      - "8081:8081"

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    image: belovdp/product-service
    container_name: product-service
    privileged: true
    depends_on:
      - keycloak
      - product-service-db
      - eureka-service
    environment:
      PRODUCTS_PROJECT_PROFILE: demo
      PRODUCTS_DB_URL: jdbc:postgresql://product-service-db:5432/product_catalog
      PRODUCTS_DB_USERNAME: product
      PRODUCTS_DB_PASSWORD: password
      PRODUCTS_KEYCLOAK_CERT: http://keycloak:8080/auth/realms/shop/protocol/openid-connect/certs
      EUREKA_SERVICE_SERVER_PORT: 8084
      EUREKA_SERVICE_SERVER_HOSTNAME: eureka-service
    ports:
      - "8082:8082"

  product-service-db:
    image: postgres:13.2
    restart: unless-stopped
    environment:
      POSTGRES_DB: product_catalog
      POSTGRES_USER: product
      POSTGRES_PASSWORD: password

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    image: belovdp/order-service
    container_name: order-service
    privileged: true
    depends_on:
      - keycloak
      - order-service-db
      - eureka-service
    environment:
      ORDERS_PROJECT_PROFILE: demo
      ORDERS_DB_URL: jdbc:postgresql://order-service-db:5432/order_service
      ORDERS_DB_USERNAME: order_service
      ORDERS_DB_PASSWORD: password
      ORDERS_KEYCLOAK_CERT: http://keycloak:8080/auth/realms/shop/protocol/openid-connect/certs
      EUREKA_SERVICE_SERVER_PORT: 8084
      EUREKA_SERVICE_SERVER_HOSTNAME: eureka-service
    ports:
      - "8087:8087"

  order-service-db:
    image: postgres:13.2
    restart: unless-stopped
    environment:
      POSTGRES_DB: order_service
      POSTGRES_USER: order_service
      POSTGRES_PASSWORD: password

  file-service:
    build:
      context: ./file-service
      dockerfile: Dockerfile
    image: belovdp/file-service
    container_name: file-service
    privileged: true
    depends_on:
      - keycloak
      - file-service-db
      - eureka-service
    environment:
      FILE_SERVICE_PROJECT_PROFILE: demo
      FILE_SERVICE_DB_URL: jdbc:postgresql://file-service-db:5432/file_service
      FILE_SERVICE_DB_USERNAME: file_service
      FILE_SERVICE_DB_PASSWORD: password
      FILE_SERVICE_KEYCLOAK_CERT: http://keycloak:8080/auth/realms/shop/protocol/openid-connect/certs
      EUREKA_SERVICE_SERVER_PORT: 8084
      EUREKA_SERVICE_SERVER_HOSTNAME: eureka-service
      FILE_SERVICE_DIR: "/files"
    volumes:
      - "./file-service/demo:/files"
    ports:
      - "8088:8088"

  file-service-db:
    image: postgres:13.2
    restart: unless-stopped
    environment:
      POSTGRES_DB: file_service
      POSTGRES_USER: file_service
      POSTGRES_PASSWORD: password

  eureka-service:
    build:
      context: ./eureka-service
      dockerfile: Dockerfile
    image: belovdp/eureka-service
    container_name: eureka-service
    privileged: true
    environment:
      EUREKA_SERVICE_SERVER_HOSTNAME: localhost
    ports:
      - "8084:8084"

  gateway-service:
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    image: belovdp/gateway-service
    container_name: gateway-service
    privileged: true
    environment:
      EUREKA_SERVICE_SERVER_PORT: 8084
      EUREKA_SERVICE_SERVER_HOSTNAME: eureka-service
      GATEWAY_CORS: http://localhost:8085
    ports:
      - "8086:8086"

  admin-ui:
    build:
      context: ./admin-ui
      dockerfile: Dockerfile
    image: belovdp/admin-ui
    container_name: admin-ui
    privileged: true
    environment:
      GATEWAY_URL: http://localhost:8086
      KC_CLIENT: shop-app
    ports:
      - "8085:80"